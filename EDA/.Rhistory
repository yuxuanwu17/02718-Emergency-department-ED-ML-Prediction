remained_feature <- colnames(clean_dat)
table(features[which(features$Variable.Name %in% remained_feature),4])
View(features)
table(features[which(features$Variable.Name[2:nrow(features)] %in% remained_feature),4])
features$Variable.Name[2:nrow(features)]
features$Variable.Name[2:10]
table(features[which(features$Variable.Name[2:nrow(features)] %in% remained_feature),4])
table(features[which(features$Variable.Name %in% remained_feature),4])
table(features[which(features$Variable.Name %in% remained_feature),4])
df_trans <- clean_dat
for (i in 1:ncol(clean_dat)) {
df_trans[,i] <- as.numeric(df_trans[,i])
}
# computing correlation and inspect features with high correlation
cortest <- cor(df_trans)
cortest["disposition","ecodesmachinery"]
cortest["disposition",]
plot(cortest["disposition",] )
mean(abs(cortest["disposition",]))
View(df_trans)
write.csv(df_trans, "../../Data/Cleaned_dat.csv", row.names = FALSE)
diposition_corr <- data.frame(feature = names(cortest["disposition",]),
cor = cortest["disposition",])
View(diposition_corr)
diposition_corr <- data.frame(cor = cortest["disposition",])
View(diposition_corr)
diposition_corr <- data.frame(cor = cortest["disposition",],
corabs = abs(cortest["disposition",]))
View(diposition_corr[order(diposition_corr$corabs)], )
View(diposition_corr[order(diposition_corr$corabs),] )
View(diposition_corr[order(diposition_corr$corabs, decreasing = TRUE),] )
diposition_corr_order <- diposition_corr[order(diposition_corr$corabs,
decreasing = TRUE),])
diposition_corr_order <- diposition_corr[order(diposition_corr$corabs,
decreasing = TRUE),]
View(diposition_corr_order)
cor_test <- cor(df_trans[,which(colnames(df_trans) %in% rownames(diposition_corr_order)[1:20])])
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white")
cor_test <- cor(df_trans[,which(colnames(df_trans) %in% rownames(diposition_corr_order)[1:30])])
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white")
rownames(diposition_corr_order)[1:30]
esiPie <- function(esiArray, titleText){
esiArray <- as.numeric(esiArray)
esiDat <- data.frame(
group = c("level1", "level2", "level3",
"level4", "level5"),
value = c(sum(esiArray == 1), sum(esiArray == 2),
sum(esiArray == 3), sum(esiArray == 4),
sum(esiArray == 5))
)
bp<- ggplot(esiDat, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold", hjust = 0.5)
)
p <- pie + scale_fill_brewer("ESI") + blank_theme +
theme(axis.text.x=element_blank())+
geom_text_repel(aes(y = value/2 + c(0, cumsum(value)[-length(value)]),
label = percent(value/sum(value))), size=5) +
ggtitle(titleText)
p
}
View(clean_dat)
View(df_trans)
esiPie(df_trans$esi, "a")
########### age stack barplot ##############################
## inspect on age
mean(df_trans$age)
summary(df_trans$age)
table(df_trans$disposition)
########### age stack barplot ##############################
## inspect on age
summary(df_trans$age)
specie <- c(rep("sorgho" , 3) , rep("poacee" , 3) , rep("banana" , 3) , rep("triticum" , 3) )
condition <- rep(c("normal" , "stress" , "Nitrogen") , 4)
value <- abs(rnorm(12 , 0 , 15))
data_test <- data.frame(specie,condition,value)
View(data_test)
View(clean_dat)
rep(c("Admit", "Discharge"), 4)
rep(age_interval,4)
age_interval <- c(0,32,50,65,108)
rep(age_interval, 4)
paste(1,"2")
paste(1,"2", +-)
paste(1,"2", "-")
paste(1,"2", sep = "-")
age_interval_string <- c()
for (i in 1:4){
current_age_string <- paste(age_interval[i],
age_interval[i+1],sep = "-")
age_interval_string <- c(age_interval_string, )
}
age_interval_string <- c()
for (i in 1:4){
current_age_string <- paste(age_interval[i],
age_interval[i+1],sep = "-")
age_interval_string <- c(age_interval_string, current_age_string)
}
age_interval_string
age_df <- data.frame(label = rep(c("Admit", "Discharge"), 4),
age = rep(age_interval_string, 4))
View(age_df)
age_start <- c(0,32,50,65)
age_end <- c(32,50,65,108)
age_interval_string <- c()
for (i in 1:4){
current_age_string <- paste(age_start[i],
age_end[i],sep = "-")
age_interval_string <- c(age_interval_string, current_age_string)
}
age_values <- c()
age_df <- data.frame(label = rep(c("Admit", "Discharge"), 4),
age = rep(age_interval_string, 4))
age_df <- data.frame(label = rep(c("Admit", "Discharge"), 4),
age = rep(age_interval_string, 4),
age_start = rep(age_start, 4),
age_end = rep(age_end, 4))
age_df <- data.frame(label = rep(c("Admit", "Discharge"), 4),
age = rep(age_interval_string, 4),
age_start = rep(age_start, 4),
age_end = rep(age_end, 4),
value = 0)
nrow(clean_dat[which(clean_dat$disposition == "Admit" & clean_dat$age > 0 & clean_dat$age < 35),])
nrow(clean_dat[which(clean_dat$disposition == "Admit" & clean_dat$age >= 0 & clean_dat$age < 35),])
for (i in 1:nrow(age_df)){
age_df[i, "value"] <- nrow(clean_dat[which(clean_dat$disposition == age_df[i,1] &
clean_dat$age >= age_df[i,2] &
clean_dat$age < age_df[i,3]),])
}
View(age_df)
for (i in 1:nrow(age_df)){
age_df[i, "value"] <- nrow(clean_dat[which(clean_dat$disposition == age_df[i,1] &
clean_dat$age >= age_df[i,3] &
clean_dat$age < age_df[i,4]),])
}
rep(c("Admit", "Discharge"), 4)
age_df <- data.frame(label = rep(c("Admit", "Discharge"), 4),
age = rep(age_interval_string, 2),
age_start = rep(age_start, 2),
age_end = rep(age_end, 2),
value = 0)
?rep()
age_df <- data.frame(label = rep(c("Admit", "Discharge"), each = 4),
age = rep(age_interval_string, 2),
age_start = rep(age_start, 2),
age_end = rep(age_end, 2),
value = 0)
for (i in 1:nrow(age_df)){
age_df[i, "value"] <- nrow(clean_dat[which(clean_dat$disposition == age_df[i,1] &
clean_dat$age >= age_df[i,3] &
clean_dat$age < age_df[i,4]),])
}
table(clean_dat$disposition)
sum(age_df$value)
for (i in 1:nrow(age_df)){
age_df[i, "value"] <- nrow(clean_dat[which(clean_dat$disposition == age_df[i,1] &
clean_dat$age >= age_df[i,3] &
clean_dat$age < age_df[i,4]),])
if (i == 4 | i == 8) {
age_df[i, "value"] <- nrow(clean_dat[which(clean_dat$disposition == age_df[i,1] &
clean_dat$age >= age_df[i,3] &
clean_dat$age <= age_df[i,4]),])
}
}
# Stacked barplot
ggplot(age_df[,c(1,2,5)], aes(fill=label, y=value, x=age)) +
geom_bar(position="stack", stat="identity")
ggplot(age_df[,c(1,2,5)], aes(fill=label, y=value, x=age)) +
geom_bar(position="fill", stat="identity")
## data imbalance
table(clean_dat$disposition)
save.image("D:/E/E/CMU/Courses/Computational_Medicine/Project/proj4CM/EDA/.RData")
load("D:/E/E/CMU/Courses/Computational_Medicine/Project/proj4CM/EDA/.RData")
load("D:/E/E/CMU/Courses/Computational_Medicine/Project/proj4CM/EDA/.RData")
memory.limit(2000)
load("D:/E/E/CMU/Courses/Computational_Medicine/Project/proj4CM/EDA/.RData")
memory.limit(2000)
memory.limit(20000)
load("D:/E/E/CMU/Courses/Computational_Medicine/Project/proj4CM/EDA/.RData")
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white")
library(ggplot2)
library(reshape2)
library(ggcorrplot)
library(scales)
library(ggrepel)
cor_test <- cor(df_trans[,which(colnames(df_trans) %in%
rownames(diposition_corr_order)[1:30])])
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white")
?ggcorrplot()
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white", lab = TRUE)
cor_test
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white", lab = TRUE,
tl.cex = 0)
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white", lab = TRUE,
tl.pos = "no")
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white", lab = TRUE,
tl.pos = "no", lab_size = 1)
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white", lab = TRUE,
lab_size = 1)
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white", lab = TRUE,
lab_size = 1.2)
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white")
names(cor_test)
View(cor_test)
rownames(cor_test) <- NA
colnames(cor_test) <- rep("", ncol(cor_test))
rownames(cor_test) <- rep("", nrow(cor_test))
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white")
cor_test <- cor(df_trans[,which(colnames(df_trans) %in%
rownames(diposition_corr_order)[1:30])])
colnames(cor_test) <- 1:ncol(cor_test)
rownames(cor_test) <- 1:nrow(cor_test)
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white")
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white",
ggtheme = theme_bw)
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white",
ggtheme = theme_classic)
pdf("../Plots/Correlation.pdf")
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white",
ggtheme = theme_classic)
dev.off()
pdf("./Correlation.pdf")
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white",
ggtheme = theme_classic)
dev.off()
pdf("./Plots/Correlation.pdf")
ggcorrplot(cor_test, hc.order = TRUE, outline.col = "white",
ggtheme = theme_classic)
dev.off()
########### sex
sexPie(clean_dat$gender,"k")
sexPie(clean_dat$gender[which(clean_dat$disposition == "Admit")],"k")
sexPie(clean_dat$gender[which(clean_dat$disposition == "Discharge")],"k")
sexPie(clean_dat$gender,"Gnder distribution for all patients")
sexPie(clean_dat$gender,"Gender distribution for all patients")
sexPie(clean_dat$gender[which(clean_dat$disposition == "Admit")],
"Gender distribution for admitted patients")
## export pdf plot
pdf("./Plots/Gender_all.pdf")
sexPie(clean_dat$gender,"Gender distribution for all patients")
dev.off()
pdf("./Plots/Gender_admit.pdf")
sexPie(clean_dat$gender[which(clean_dat$disposition == "Admit")],
"Gender distribution for admitted patients")
dev.off()
pdf("./Plots/Gender_discharge.pdf")
sexPie(clean_dat$gender[which(clean_dat$disposition == "Discharge")],
"Gender distribution for discharged patients")
dev.off()
esiPie(clean_dat$gender,"Gender distribution for all patients")
esiPie(clean_dat$esi,"Gender distribution for all patients")
esiPie(clean_dat$esi[which(clean_dat$disposition == "Discharge")],
"ESI distribution for discharged patients")
?scale_fill_brewer()
########### esi pie chart ##############################
esiPie <- function(esiArray, titleText){
esiArray <- as.numeric(esiArray)
esiDat <- data.frame(
group = c("level1", "level2", "level3",
"level4", "level5"),
value = c(sum(esiArray == 1), sum(esiArray == 2),
sum(esiArray == 3), sum(esiArray == 4),
sum(esiArray == 5))
)
bp<- ggplot(esiDat, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold", hjust = 0.5)
)
p <- pie + scale_fill_brewer("ESI",type = "PuBu") + blank_theme +
theme(axis.text.x=element_blank())+
geom_text_repel(aes(y = value/2 + c(0, cumsum(value)[-length(value)]),
label = percent(value/sum(value))), size=5) +
ggtitle(titleText)
p
}
esiPie(clean_dat$esi,"ESI distribution for all patients")
########### esi pie chart ##############################
esiPie <- function(esiArray, titleText){
esiArray <- as.numeric(esiArray)
esiDat <- data.frame(
group = c("level1", "level2", "level3",
"level4", "level5"),
value = c(sum(esiArray == 1), sum(esiArray == 2),
sum(esiArray == 3), sum(esiArray == 4),
sum(esiArray == 5))
)
bp<- ggplot(esiDat, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold", hjust = 0.5)
)
p <- pie + scale_fill_brewer("ESI",palette = "PuBu") + blank_theme +
theme(axis.text.x=element_blank())+
geom_text_repel(aes(y = value/2 + c(0, cumsum(value)[-length(value)]),
label = percent(value/sum(value))), size=5) +
ggtitle(titleText)
p
}
esiPie(clean_dat$esi,"ESI distribution for all patients")
########### esi pie chart ##############################
esiPie <- function(esiArray, titleText){
esiArray <- as.numeric(esiArray)
esiDat <- data.frame(
group = c("level1", "level2", "level3",
"level4", "level5"),
value = c(sum(esiArray == 1), sum(esiArray == 2),
sum(esiArray == 3), sum(esiArray == 4),
sum(esiArray == 5))
)
bp<- ggplot(esiDat, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold", hjust = 0.5)
)
p <- pie + scale_fill_brewer("ESI",palette = "GnBu") + blank_theme +
theme(axis.text.x=element_blank())+
geom_text_repel(aes(y = value/2 + c(0, cumsum(value)[-length(value)]),
label = percent(value/sum(value))), size=5) +
ggtitle(titleText)
p
}
esiPie(clean_dat$esi,"ESI distribution for all patients")
########### esi pie chart ##############################
esiPie <- function(esiArray, titleText){
esiArray <- as.numeric(esiArray)
esiDat <- data.frame(
group = c("level1", "level2", "level3",
"level4", "level5"),
value = c(sum(esiArray == 1), sum(esiArray == 2),
sum(esiArray == 3), sum(esiArray == 4),
sum(esiArray == 5))
)
bp<- ggplot(esiDat, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold", hjust = 0.5)
)
p <- pie + scale_fill_brewer("ESI",palette = "OrRd") + blank_theme +
theme(axis.text.x=element_blank())+
geom_text_repel(aes(y = value/2 + c(0, cumsum(value)[-length(value)]),
label = percent(value/sum(value))), size=5) +
ggtitle(titleText)
p
}
esiPie(clean_dat$esi,"ESI distribution for all patients")
esiPie(clean_dat$esi[which(clean_dat$disposition == "Admit")],
"ESI distribution for admitted patients")
########### esi pie chart ##############################
esiPie <- function(esiArray, titleText){
esiArray <- as.numeric(esiArray)
esiDat <- data.frame(
group = c("level1", "level2", "level3",
"level4", "level5"),
value = c(sum(esiArray == 1), sum(esiArray == 2),
sum(esiArray == 3), sum(esiArray == 4),
sum(esiArray == 5))
)
bp<- ggplot(esiDat, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold", hjust = 0.5)
)
p <- pie + scale_fill_brewer("ESI",palette = "OrRd",direction=-1) + blank_theme +
theme(axis.text.x=element_blank())+
geom_text_repel(aes(y = value/2 + c(0, cumsum(value)[-length(value)]),
label = percent(value/sum(value))), size=5) +
ggtitle(titleText)
p
}
esiPie(clean_dat$esi,"ESI distribution for all patients")
esiPie(clean_dat$esi[which(clean_dat$disposition == "Discharge")],
"ESI distribution for discharged patients")
pdf("./Plots/ESI_all.pdf")
esiPie(clean_dat$esi,"ESI distribution for all patients")
dev.off()
pdf("./Plots/ESI_admit.pdf")
esiPie(clean_dat$esi[which(clean_dat$disposition == "Admit")],
"ESI distribution for admitted patients")
dev.off()
pdf("./Plots/ESI_discharge.pdf")
esiPie(clean_dat$esi[which(clean_dat$disposition == "Discharge")],
"ESI distribution for discharged patients")
dev.off()
# Stacked barplot
ggplot(age_df[,c(1,2,5)], aes(fill=label, y=value, x=age)) +
geom_bar(position="fill", stat="identity")
?geom_bar()
# Stacked barplot
ggplot(age_df[,c(1,2,5)], aes(fill=label, y=value, x=age)) +
geom_bar(position="fill", stat="identity", colour = c("black", "white"))
View(age_df)
# Stacked barplot
ggplot(age_df[,c(1,2,5)], aes(fill=label, y=value, x=age)) +
geom_bar(position="fill", stat="identity", colour = rep(c("black", "white")), each = 4)
# Stacked barplot
ggplot(age_df[,c(1,2,5)], aes(fill=label, y=value, x=age)) +
geom_bar(position="fill", stat="identity", colour = rep(c("black", "white"), each = 4))
# Stacked barplot
ggplot(age_df[,c(1,2,5)], aes(fill=label, y=value, x=age)) +
geom_bar(position="fill", stat="identity",
fill = rep(c("black", "white"), each = 4))
# Stacked barplot
ggplot(age_df[,c(1,2,5)], aes(fill=label, y=value, x=age)) +
geom_bar(position="fill", stat="identity",
fill = rep(c("#45A0F9", "white"), each = 4))
# Stacked barplot
ggplot(age_df[,c(1,2,5)], aes(fill=label, y=value, x=age)) +
geom_bar(position="fill", stat="identity",
fill = rep(c("#45A0F9", "#F99D45"), each = 4))
# Stacked barplot
ggplot(age_df[,c(1,2,5)], aes(fill=label, y=value, x=age)) +
geom_bar(position="fill", stat="identity",
fill = rep(c("#45A0F9", "#F99D45"), each = 4), show.legend = TRUE)
# Stacked barplot
ggplot(age_df[,c(1,2,5)], aes(fill=label, y=value, x=age)) +
geom_bar(position="fill", stat="identity")
pdf("./Plots/Age_stackplot.pdf")
ggplot(age_df[,c(1,2,5)], aes(fill=label, y=value, x=age)) +
geom_bar(position="fill", stat="identity")
dev.off()
memory.limit(20000)
load("D:/E/E/CMU/Courses/Computational_Medicine/Project/proj4CM/EDA/.RData")
esiPie(clean_dat$esi,"ESI distribution for all patients")
# load packages
library(ggplot2)
library(reshape2)
library(ggcorrplot)
library(scales)
library(ggrepel)
esiPie(clean_dat$esi,"ESI distribution for all patients")
esiPie <- function(esiArray, titleText){
esiArray <- as.numeric(esiArray)
esiDat <- data.frame(
group = c("level1", "level2", "level3",
"level4", "level5"),
value = c(sum(esiArray == 1), sum(esiArray == 2),
sum(esiArray == 3), sum(esiArray == 4),
sum(esiArray == 5))
)
bp<- ggplot(esiDat, aes(x="", y=value, fill=group))+
geom_bar(width = 1, stat = "identity")
pie <- bp + coord_polar("y", start=0)
blank_theme <- theme_minimal()+
theme(
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.border = element_blank(),
panel.grid=element_blank(),
axis.ticks = element_blank(),
plot.title=element_text(size=14, face="bold", hjust = 0.5)
)
p <- pie + scale_fill_brewer("ESI",palette = "OrRd",direction=-1) + blank_theme +
theme(axis.text.x=element_blank())+
geom_text_repel(aes(y = value/2 + c(0, cumsum(value)[-length(value)]),
label = percent(value/sum(value))), size=5) +
ggtitle(titleText)
p
}
esiPie(clean_dat$esi,"ESI distribution for all patients")
sum(clean_dat$esi == "1")/nrow(clean_dat)
sum(clean_dat$esi == "2")/nrow(clean_dat)
sum(clean_dat$esi == "3")/nrow(clean_dat)
sum(clean_dat$esi == "4")/nrow(clean_dat)
sum(clean_dat$esi == "5")/nrow(clean_dat)
sum(clean_dat$esi == "5" && clean_dat$disposition == "Admit")/nrow(clean_dat)
sum(clean_dat$esi == "5" & clean_dat$disposition == "Admit")/nrow(clean_dat)
sum(clean_dat$esi == "5" & clean_dat$disposition == "Admit")/nrow(clean_dat[which(clean_dat$disposition == "Admit")])
sum(clean_dat$esi == "5" & clean_dat$disposition == "Admit")/nrow(clean_dat[which(clean_dat$disposition == "Admit"),])
